{
  "name": "cfb",
  "version": "0.10.3",
  "author": {
    "name": "sheetjs"
  },
  "description": "Compound File Binary File Format extractor",
  "keywords": [
    "cfb",
    "compression",
    "office"
  ],
  "bin": {
    "cfb": "./bin/cfb.njs"
  },
  "main": "./cfb",
  "files": [
    "LICENSE",
    "README.md",
    "bin/",
    "dist/",
    "cfb.js"
  ],
  "dependencies": {
    "commander": ""
  },
  "devDependencies": {
    "mocha": "",
    "xlsjs": "",
    "uglify-js": ""
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/SheetJS/js-cfb.git"
  },
  "scripts": {
    "pretest": "make init",
    "test": "make test"
  },
  "config": {
    "blanket": {
      "pattern": "cfb.js"
    }
  },
  "bugs": {
    "url": "https://github.com/SheetJS/js-cfb/issues"
  },
  "license": "Apache-2.0",
  "engines": {
    "node": ">=0.8"
  },
  "readme": "# Compound File Binary Format\n\nThis is a Pure-JS implementation of MS-CFB: Compound File Binary File Format, a\nformat used in many Microsoft file types (such as XLS, DOC, and other Microsoft\nOffice file types).\n\n# Utility Installation and Usage\n\nThe package is available on NPM:\n\n```\n$ npm install -g cfb\n$ cfb path/to/CFB/file\n```\n\nThe command will extract the storages and streams in the container, generating\nfiles that line up with the tree-based structure of the storage.  Metadata\nsuch as the red-black tree are discarded (and in the future, new CFB containers\nwill exclusively use black nodes)\n\n# Library Installation and Usage\n\nIn the browser:\n\n    <script src=\"cfb.js\" type=\"text/javascript\"></script>\n\nIn node:\n\n    var CFB = require('cfb');\n\nFor example, to get the Workbook content from an XLS file:\n\n    var cfb = CFB.read(filename, {type: 'file'});\n    var workbook = cfb.find('Workbook')\n\n# API\n\nTypescript definitions are maintained in `misc/cfb.d.ts`.\n\nThe CFB object exposes the following methods and properties:\n\n`CFB.parse(blob)` takes a nodejs Buffer or an array of bytes and returns an\nparsed representation of the data.\n\n`CFB.read(blob, options)` wraps `parse`.  `options.type` controls the behavior:\n\n- `file`: `blob` should be a file name\n- `base64`: `blob` should be a base64 string\n- `binary`: `blob` should be a binary string\n\n## Container Object Description\n\nThe object returned by `parse` and `read` can be found in the source (`rval`).\nIt has the following properties and methods:\n\n- `.find(path)` performs a case-insensitive match for the path (or file name, if\n  there are no slashes) and returns an entry object (described later) or null if\n  not found\n\n- `.FullPaths` is an array of the names of all of the streams (files) and\n  storages (directories) in the container.  The paths are properly prefixed from\n  the root entry (so the entries are unique)\n\n- `.FullPathDir` is an object whose keys are entries in `.FullPaths` and whose\n  values are objects with metadata and content (described below)\n\n- `.FileIndex` is an array of the objects from `.FullPathDir`, in the same order\n  as `.FullPaths`.\n\n- `.raw` contains the raw header and sectors\n\n## Entry Object Description\n\nThe entry objects are available from `FullPathDir` and `FileIndex` elements of\nthe container object.\n\n- `.name` is the (case sensitive) internal name\n- `.type` is the type as defined in \"Object Type\" in [MS-CFB] 2.6.1:\n  `2 (stream)` for files, `1 (storage)` for dirs, `5 (root)` for root)\n- `.content` is a Buffer/Array with the raw content\n- `.ct`/`.mt` are the creation and modification time (if provided in file)\n\n# Notes\n\nCase comparison has not been verified for non-ASCII characters\n\nWriting is not supported.  It is in the works, but it has not yet been released.\n\nThe `xlscfb.js` file is designed to be embedded in [js-xls](http://git.io/xls)\n\n# License\n\nThis implementation is covered under Apache 2.0 license.  It complies with the\n[Open Specifications Promise](http://www.microsoft.com/openspecifications/)\n\n[![Build Status](https://travis-ci.org/SheetJS/js-cfb.svg?branch=master)](https://travis-ci.org/SheetJS/js-cfb)\n\n[![Coverage Status](https://coveralls.io/repos/SheetJS/js-cfb/badge.png?branch=master)](https://coveralls.io/r/SheetJS/js-cfb?branch=master)\n\n[![githalytics.com alpha](https://cruel-carlota.pagodabox.com/88c2e1fd637653cd780b3c6d3dcd70ad \"githalytics.com\")](http://githalytics.com/SheetJS/js-cfb)\n\n",
  "readmeFilename": "README.md",
  "_id": "cfb@0.10.3",
  "_from": "cfb@>=0.10.0"
}
